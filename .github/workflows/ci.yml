name: CI

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2
      
    - name: Install Distro dependencies
      run: sudo apt-get install libssl-dev luarocks doxygen sshpass libavcodec-dev libavformat-dev libavutil-dev libswresample-dev libswscale-dev libsdl2-dev libsdl2-mixer-dev libfreetype6-dev libwxgtk3.0-gtk3-dev clang-tidy-8
    
    - name: Install Catch2
      shell: bash
      working-directory: ${{runner.workspace}}
      run: |
        git clone https://github.com/catchorg/Catch2.git -b v2.13.2 --depth=1
        cd Catch2
        cmake -Bbuild -H. -DBUILD_TESTING=OFF
        cd build && sudo make install
    
    - name: Install LuaRocks dependencies
      run: |
        sudo luarocks install luasec OPENSSL_DIR=/usr OPENSSL_LIBDIR=/usr/lib/x86_64-linux-gnu/
        # Required for LDocGen
        sudo luarocks install lpeg
        sudo luarocks install luafilesystem
        sudo luarocks install luasocket
        sudo luarocks install luacheck 0.19.1
        # Required for lua unit tests
        sudo luarocks install busted
      
    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DENABLE_UNIT_TESTS=ON -DWITH_AUDIO=ON -DWITH_MOVIES=ON -DWITH_LUAJIT=OFF -DCMAKE_EXPORT_COMPILE_COMMANDS=ON --debug-output
    
    - name: Pre-build tests
      working-directory: ${{runner.workspace}}/CorsixTH
      shell: bash
      run: ls ../build

    - name: Pre-build tests
      working-directory: ${{runner.workspace}}/CorsixTH
      shell: bash
      run: |
        # Check if there are trailing whitespaces.
        scripts/check_trailing_whitespaces.py ${GITHUB_WORKSPACE}
        # Check for incorrectly encoded language files.
        scripts/check_language_files_not_BOM.py ${GITHUB_WORKSPACE}/CorsixTH/Lua/languages
        # Check if there are lua classes with invalid/improper declarations.
        scripts/check_lua_classes.py
        # Check cpp format
        clang-format -i CorsixTH/Src/*{.cpp,.h} AnimView/*{.cpp,.h} libs/rnc/*{.cpp,.h} CorsixTH/SrcUnshared/main.cpp
        # clang-tidy check. The valist test is buggy in this environment (https://bugs.llvm.org/show_bug.cgi?id=41311)
        clang-tidy-8 -p ../build --warnings-as-errors=\*,-clang-analyzer-valist.Uninitialized CorsixTH/Src/*{.cpp,.c} libs/rnc/*.cpp CorsixTH/SrcUnshared/main.cpp
        git diff --exit-code
        find . -path ${GITHUB_WORKSPACE}/CorsixTH/Lua/languages -prune -o -name '*.lua' -print0 | xargs -0 luac -p --
        luacheck -q .

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config $BUILD_TYPE --debug-output

    - name: CPP test
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C $BUILD_TYPE
      
    - name: Lua test
      working-directory: ${{runner.workspace}}/CorsixTH/Luatest
      shell: bash
      run: busted
      
    - name: Build documentation
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: make doc
